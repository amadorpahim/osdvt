#! /bin/bash
#
# chkconfig: 2345 20 80
# description: Activates/Deactivates OSDVT Server
#

base_dir="/usr/local/osdvt/server/bin"
osdvt="osdvt-server"
port="6970"

start()
{
        check_pid
	[ -z $pid ] && {
	 	$base_dir/$osdvt >> /usr/local/osdvt/server/log/osdvt-server.log 2>> /usr/local/osdvt/server/log/osdvt-server.log &
	        echo -n Starting OSDVT..
		n=120
	        while [ -z $pid ] && [ $n -gt 1 ]; do
	                sleep 1
	                echo -n .
	                n=$(($n - 1))
			check_pid
	        done
		sleep 1
	        check_pid
		[ -z $pid ] && echo -n " FAILED" ||  echo -n " OK. PID: $pid"
	        echo ""
	} || {
		echo "Running... PID: $pid"
	}

}

stop()
{
	declare -l option
	ps -C qemu-kvm > /dev/null 2>1 && {
		read -t 5 -p "There is at least one VM running. Kill all VMs? (y/n)" option	
		echo ""
		[ "${option}" == "y" ] && {
			killall qemu-kvm
			n=120
			while ps -C qemu-kvm > /dev/null 2>1 && [ $n -gt 1 ]; do
				sleep 1
                		echo -n .
                		n=$(($n - 1))
			done
			sleep 1
			! ps -C qemu-kvm > /dev/null 2>1 || echo -n " FAILED"
		}
	}
	stop_daemon

}

stop_daemon()
{
	check_pid
        [ ! -z $pid ] && {
		kill $(pidof -x $osdvt) > /dev/null 2> /dev/null
	        n=120
	        echo -n Stopping OSDVT.. 
	        while ([ ! -z $pid ] || netstat -anp | grep ":$port" > /dev/null 2> /dev/null) && [ $n -gt 1 ]; do
	                sleep 1
	                echo -n .
	                n=$(($n - 1))
			check_pid
	        done
		sleep 1
	        check_pid
		[ -z $pid ] && echo -n " OK" ||  echo -n " FAILED"
	        echo ""
	} || {
		echo "Not running."
	}
}

status()
{
	check_pid
	[ -z $pid ] && {
		echo "Not running."
	} || {
		echo "Running... PID: $pid"
	}
}

check_pid()
{
	pid=$(ps --no-heading -o pid -C $osdvt)
}

case "$1" in
start)
        start
        ;;
stop)
        stop
        ;;
status)
        status
	;;
restart)
        stop
        start
        ;;
*)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0
